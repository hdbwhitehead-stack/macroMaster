'=== PERSONAL.XLSB : general_Shortcuts ===

Sub Auto_Open()
    Application.OnKey "^+b", "BalanceAutomation"
    Application.OnKey "^+h", "forecast_Border"
    Application.OnKey "^+p", "pFill"
    Application.OnKey "^+d", "dateActual"
    Application.OnKey "^+a", "circClear"
    Application.OnKey "^+v", "OpenActivateDialog"
    Application.OnKey "^+c", "centAcrSel"
    Application.OnKey "^+-", "minusMult"
    Application.OnKey "^+e", "if_Error"
End Sub


'----------------------------------------
' Sheet navigation popup
'----------------------------------------
Sub OpenActivateDialog()
    Dim sheetCount As Integer
    sheetCount = ActiveWorkbook.Sheets.Count

    If sheetCount > 16 Then
        Application.CommandBars("Workbook Tabs").Controls("More Sheets...").Execute
    Else
        Application.CommandBars("Workbook Tabs").ShowPopup
    End If
End Sub


'----------------------------------------
' Center Across Selection
'----------------------------------------
Sub centAcrSel()
    With Selection
        .HorizontalAlignment = xlCenterAcrossSelection
    End With
End Sub


'----------------------------------------
' Multiply selection by -1
'----------------------------------------
Sub minusMult()
    Dim tempCell As Range
    Set tempCell = ActiveSheet.Cells(Rows.Count, Columns.Count).End(xlUp).Offset(1, 0)
    tempCell.Value = -1
    tempCell.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlMultiply, _
                           SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    tempCell.Clear
End Sub


'----------------------------------------
' Wrap formulas in IFERROR(...,0) if not already
'----------------------------------------
Sub if_Error()
    Dim cell As Range
    Dim formulaText As String
    For Each cell In Selection.Cells
        If cell.HasFormula Then
            formulaText = cell.Formula
            If Left(formulaText, 8) <> "=IFERROR" Then _
                cell.Formula = "=IFERROR(" & Mid(formulaText, 2) & ",0)"
        End If
    Next cell
End Sub


'----------------------------------------
' Toggle circularity / iterations and set "circ" flag
'----------------------------------------
Sub circClear()
    Dim usrChoice As Integer
    usrChoice = MsgBox("Do you want to switch iterations/circularity on?", _
                       vbYesNo + vbQuestion, "Turn Circularity")

    If usrChoice = vbYes Then
        Range("circ").Value = 1
        With Application
            .Iteration = True     ' Enable iterative calculation
            .MaxIterations = 100  ' Set maximum iterations to 100
            .MaxChange = 0.0001   ' Set maximum change to 0.0001
        End With
        MsgBox "Iterative calculations are now enabled and the circ switch is on"
    Else
        Range("circ").Value = 0
        With Application
            .Iteration = False
            .MaxIterations = 100
            .MaxChange = 0.0001
        End With
        MsgBox "Iterative calculations are now disabled and the circ switch is off"
    End If
End Sub


'----------------------------------------
' Forecast divider border (red, dashed, right edge)
'----------------------------------------
Public Sub forecast_Border()
    Dim Rng As Range
    Set Rng = Selection
    Dim borderColor As Long

    borderColor = RGB(192, 0, 0)

    With Rng.Borders(xlEdgeRight)
        .LineStyle = xlDash
        .Color = borderColor
        .Weight = xlThin
    End With
End Sub


'----------------------------------------
' Pattern fill (Gray16)
'----------------------------------------
Public Sub pFill()
    Dim pRng As Range
    Set pRng = Selection

    With pRng.Interior
        .Pattern = xlPatternGray16
        .PatternColorIndex = xlAutomatic
        .Color = RGB(255, 255, 255)
        .PatternTintAndShade = 0
    End With
End Sub


'----------------------------------------
' Date actual formatting across selected header row
'----------------------------------------
Public Sub dateActual()
    Dim dRange As Range
    Set dRange = Selection
    Dim nCols As Long

    nCols = dRange.Columns.Count
    dRange.HorizontalAlignment = xlCenter

    Dim r As Long
    For r = 1 To nCols
        If dRange.Cells(1, r) < Date Then
            dRange.Cells(1, r).NumberFormat = """yy""yy""A"""
        Else
            dRange.Cells(1, r).NumberFormat = """yy"""
        End If
    Next r
End Sub


'----------------------------------------
' BalanceAutomation block
'----------------------------------------
Public Sub BalanceAutomation()
    Dim sel As Range
    Set sel = Selection

    Dim nRows As Long, nCols As Long
    nRows = sel.Rows.Count
    nCols = sel.Columns.Count

    Dim borderColor As Long
    Dim interior As Range
    Dim bRow As Range

    Set interior = sel.Range(Cells(2, 1), Cells(nRows - 1, nCols))
    interior.FillRight

    Set bRow = sel.Range(Cells(nRows, 1), Cells(nRows, nCols))
    borderColor = RGB(192, 0, 0)
    bRow.Font.Bold = True

    With bRow.Borders(xlEdgeTop)
        .Weight = xlThin
        .Color = borderColour
    End With

    Dim c As Long
    For c = 1 To nCols
        sel.Cells(1, c).FormulaR1C1 = "=R[" & (nRows - 1) & "]C[-1]"
        If nRows >= 2 Then
            sel.Cells(nRows, c).FormulaR1C1 = "=SUM(R[" & (-nRows + 1) & "]C:R[-1]C)"
        Else
            sel.Cells(nRows, c).FormulaR1C1 = "=RC"
        End If
    Next c
End Sub
'=== PERSONAL.XLSB : general_Shortcuts ===
